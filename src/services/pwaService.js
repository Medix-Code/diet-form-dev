/**
 * L√≥gica de PWA (Prompt de instalaci√≥n, etc.)
 *
 */

let deferredPrompt = null;

/**
 * Configura escuchas para "beforeinstallprompt"
 */
export function setupInstallPrompt() {
  console.log(
    "‚úÖ setupInstallPrompt() carregat! Esperant beforeinstallprompt..."
  );

  window.addEventListener("beforeinstallprompt", (evt) => {
    console.log("üì¢ Evento beforeinstallprompt capturat!");
    evt.preventDefault();
    deferredPrompt = evt;

    // FORCEM el prompt despr√©s de 3 segons (per exemple)
    setTimeout(() => {
      console.log("‚è∞ Mostrant el prompt d'instal¬∑laci√≥ al cap de 3s...");
      showInstallPrompt();
    }, 3000);
  });
}

function linkInstallButtons() {
  const installButton = document.getElementById("install-button");
  if (installButton) {
    installButton.addEventListener("click", async () => {
      if (deferredPrompt) {
        console.log("üì• Mostrando el di√°logo de instalaci√≥n...");
        await deferredPrompt.prompt();

        const choiceResult = await deferredPrompt.userChoice;
        if (choiceResult.outcome === "accepted") {
          console.log("‚úÖ El usuario ha aceptado la instalaci√≥n.");
          localStorage.setItem("isAppInstalled", "true");
          hideInstallPrompt();
        } else {
          console.log("‚ùå El usuario ha rechazado la instalaci√≥n.");
        }
        deferredPrompt = null;
        localStorage.setItem("deferredPromptExists", "false");
      } else {
        console.log("‚ö†Ô∏è deferredPrompt no est√° definido.");
      }
    });
  } else {
    console.warn(
      "‚ö†Ô∏è No se encontr√≥ el bot√≥n de instalaci√≥n (#install-button)."
    );
  }

  const dismissButton = document.getElementById("dismiss-button");
  if (dismissButton) {
    dismissButton.addEventListener("click", () => {
      console.log("üö´ El usuario ha descartado el banner de instalaci√≥n.");
      onUserDismissInstall();
    });
  } else {
    console.warn("‚ö†Ô∏è No se encontr√≥ el bot√≥n de cierre (#dismiss-button).");
  }
}

// Mantens el teu showInstallPrompt, per√≤ ara s'executa de seguida:
export function showInstallPrompt() {
  console.log("üîç Intentant mostrar el prompt de PWA...");
  if (!deferredPrompt) {
    console.warn(
      "‚ö†Ô∏è deferredPrompt √©s NULL! El navegador no ha disparat l'event."
    );
    return;
  }
  // Aqu√≠ ensenyem el banner propi:
  const installPrompt = document.getElementById("install-prompt");
  if (installPrompt) {
    installPrompt.classList.add("visible");
    console.log("‚úÖ Banner d'instal¬∑laci√≥ mostrat.");
  } else {
    console.warn("‚ö†Ô∏è No s'ha trobat l'element #install-prompt.");
  }
}

export function hideInstallPrompt() {
  const installPrompt = document.getElementById("install-prompt");
  if (installPrompt) {
    installPrompt.classList.remove("visible");
    console.log("üö´ Se ha ocultado el banner de instalaci√≥n.");
  }
}

export function onUserDismissInstall() {
  let timesUserSaidNo = +localStorage.getItem("timesUserSaidNo") || 0;
  timesUserSaidNo++;
  localStorage.setItem("timesUserSaidNo", String(timesUserSaidNo));

  // Reiniciamos el contador de descargas desde el √∫ltimo No
  localStorage.setItem("pdfDownloadsSinceNo", "0");

  // Si ya nos ha dicho NO dos veces, no lo volvemos a mostrar
  if (timesUserSaidNo >= 2) {
    localStorage.setItem("neverShowInstallPrompt", "true");
    console.log(
      "üö´ El usuario ha descartado la instalaci√≥n demasiadas veces. No se volver√° a mostrar."
    );
  }

  hideInstallPrompt();
}

export function isAppInstalled() {
  return (
    window.matchMedia("(display-mode: standalone)").matches ||
    window.navigator.standalone === true ||
    localStorage.getItem("isAppInstalled") === "true"
  );
}

export function monitorDisplayMode() {
  const mq = window.matchMedia("(display-mode: standalone)");
  mq.addEventListener("change", () => {
    if (mq.matches) {
      console.log("‚úÖ La app se est√° ejecutando en modo standalone.");
      localStorage.setItem("isAppInstalled", "true");
      hideInstallPrompt();
    } else {
      console.log("‚ÑπÔ∏è La app ha salido del modo standalone.");
      localStorage.removeItem("isAppInstalled");
    }
  });
}
